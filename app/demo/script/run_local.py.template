#!/usr/bin/env python

"""
This script starts a process locally, using <client-id> <hostfile> as inputs.
An optional 4th argument "true"/"false" indicates to export hadoop libraries
or not (default is "true").
"""

import os
from os.path import dirname
from os.path import join
import time
import sys

if len(sys.argv) != 3 and len(sys.argv) != 4:
  print "usage: %s <client-id> <hostfile> [use-yarn=true]" % sys.argv[0]
  sys.exit(1)

# Please set the FULL app dir path here
app_dir = ""

client_id = sys.argv[1]
hostfile = sys.argv[2]
proj_dir = dirname(dirname(app_dir))
if len(sys.argv) == 4 and sys.argv[3] == "false":
  use_yarn = False
else:
  use_yarn = True

params = {
    "num_iterations": 10
    , "staleness": 2
    , "input_file" : join(app_dir, "dataset/test.txt")
    #, "input_file": "hdfs://cogito.local:8020/user/wdai/dataset/demo/test.txt"
    , "output_file": join(app_dir, "output.txt")
    #, "output_file": "hdfs://cogito.local:8020/user/wdai/dataset/demo/output.txt"
    }

petuum_params = {
    "hostfile": hostfile,
    "num_threads": 10
    }

prog_name = "demo"
prog_path = join(app_dir, "bin", prog_name)

env_params = (
  "GLOG_logtostderr=true "
  "GLOG_v=-1 "
  "GLOG_minloglevel=0 "
  )

# Get host IPs
with open(hostfile, "r") as f:
  hostlines = f.read().splitlines()
host_ips = [line.split()[1] for line in hostlines]
petuum_params["num_clients"] = len(host_ips)

cmd = "killall -q " + prog_name
# os.system is synchronous call.
os.system(cmd)
print "Done killing"

if use_yarn:
  cmd = "export CLASSPATH=`hadoop classpath --glob`:$CLASSPATH; "
else:
  cmd = ""
cmd += env_params + prog_path
petuum_params["client_id"] = client_id
cmd += "".join([" --%s=%s" % (k,v) for k,v in petuum_params.items()])
cmd += "".join([" --%s=%s" % (k,v) for k,v in params.items()])
print cmd
os.system(cmd)
